[project]
name = "scrum"
version = "0.0.4"
requires-python = ">=3.10,<3.13"
description = "<<Scrum with paid tasks>>"
authors = []
urls = { Homepage = "https://lnbits.com", Repository = "https://github.com/lnbits/tpos" }
dependencies = [ "lnbits>1" ]

[tool.poetry]
package-mode = false

[tool.uv]
dev-dependencies = [
    "black>=24.3.0",
    "pytest-asyncio>=0.21.0",
    "pytest>=7.3.2",
    "mypy==1.17.1",
    "pre-commit>=3.2.2",
    "ruff>=0.3.2",
    "types-cffi>=1.16.0.20240331",
]

[tool.mypy]
[[tool.mypy.overrides]]
module = [
  "lnbits.*",
  "loguru.*",
  "fastapi.*",
  "pydantic.*",
]
ignore_missing_imports = "True"

[tool.pytest.ini_options]
log_cli = false
testpaths = [
  "tests"
]

[tool.black]
line-length = 120

[tool.ruff]
# Same as Black. + 10% rule of black
line-length = 132


[tool.ruff.lint]
# Enable:
# F - pyflakes
# E - pycodestyle errors
# W - pycodestyle warnings
# I - isort
# A - flake8-builtins
# C - mccabe
# N - naming
# UP - pyupgrade
# RUF - ruff
# B - bugbear
select = ["F", "E", "W", "I", "A", "C", "N", "UP", "RUF", "B"]
# UP007: pyupgrade: use X | Y instead of Optional. (python3.10)
ignore = ["UP007", "RUF012"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# needed for pydantic
[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "root_validator",
     "validator",
]

# Ignore unused imports in __init__.py files.
# [tool.ruff.lint.extend-per-file-ignores]
# "views_api.py" = ["F401"]

# [tool.ruff.lint.mccabe]
# max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Query",
]
